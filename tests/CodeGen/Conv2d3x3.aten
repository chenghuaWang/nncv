@package = "main";

import "io";

func Conv2d(input Tensor<1, 3, 256, 256, float32>,
            kernel Tensor<16, 3, 3, 3, float32>,
            output Tensor<1, 16, 254, 254, float32>) {
    pfor (n := 0; 1; 1) {
        pfor (k := 0; 16; 1) {
            pfor (oh := 0; 254; 1) {
                pfor (ow := 0; 254; 1) {
                    pfor (c := 0; 3; 1) {
                        pfor (r := 0; 3; 1) {
                            pfor (s := 0; 3; 1) {
                                output[n, k, oh, ow] = output[n, k, oh, ow] + input[n, c, oh + r, ow + s] * kernel[k, c, r, s];
                            };
                        };
                    };
                };
            };
        };
    };
};

func main() {
    // NCHW
    var input Tensor<1, 3, 256, 256, float32>;
    // KCRS
    var kernel Tensor<16, 3, 3, 3, float32>;
    // padding = 0, stride = 1
    var output Tensor<1, 16, 254, 254, float32>;
    Conv2d(input, kernel, output);
};